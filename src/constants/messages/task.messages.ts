export const taskMessages = {
  CREATE_TASK_SUCCESS: 'Create task success',
  UPDATE_TASK_SUCCESS: 'Update task success',
  DELETE_TASK_SUCCESS: 'Delete task success',
  NAME_IS_REQUIRED: 'Name is required',
  NAME_MUST_BE_A_STRING: 'Name must be a string',
  NAME_TASK_ALREADY_EXISTS: 'Name task already exists',
  START_DATE_MUST_BE_ISO8601: 'Start date must be ISO8601',
  END_DATE_MUST_BE_ISO8601: 'End date must be ISO8601',
  TASK_ID_IS_INVALID: 'Task id is invalid',
  TASK_NOT_FOUND: 'Task not found',
  PAGE_IS_INVALID: 'Page is invalid',
  LIMIT_IS_INVALID: 'Limit is invalid',
  GET_ALL_TASK_WITH_PAGINATE_SUCCESS: 'Get all task with paginate success',
  START_DATE_AND_END_DATE_WITHIN_PROJECT: `Please select start and end times that fall within the project's time range`,
  USER_IS_NOT_A_MEMBER_OF_THE_PROJECT: 'User is not a member of the project',
  PROJECT_ID_IS_REQUIRED: 'Project id is required',
  TYPE_ID_IS_REQUIRED: 'Type id is required',
  PRIORITY_ID_IS_REQUIRED: 'Priority id is required',
  STATUS_ID_IS_REQUIRED: 'Status id is required',
  ASSIGNED_TO_IS_REQUIRED: 'Assigned to is required',
  START_DATE_REQUIRED: 'Start date is required',
  END_DATE_REQUIRED: 'End date is required',
  GET_MY_TASK_WITH_PAGINATE_SUCCESS: 'Get my task with paginate success',
  NAME_SHOULD_NOT_EXCEED_50_CHARACTERS: 'Name should not exceed 50 characters'
}
